ARM GAS  C:\Users\hw\AppData\Local\Temp\ccAWDDea.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"Driving.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.servos_motormode,"ax",%progbits
  16              		.align	1
  17              		.global	servos_motormode
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	servos_motormode:
  25              	.LFB65:
  26              		.file 1 "Core/Src/Driving.c"
   1:Core/Src/Driving.c **** /* ========================================
   2:Core/Src/Driving.c ****  *
   3:Core/Src/Driving.c ****  * Copyright YOUR COMPANY, THE YEAR
   4:Core/Src/Driving.c ****  * All Rights Reserved
   5:Core/Src/Driving.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:Core/Src/Driving.c ****  *
   7:Core/Src/Driving.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:Core/Src/Driving.c ****  * WHICH IS THE PROPERTY OF your company.
   9:Core/Src/Driving.c ****  *
  10:Core/Src/Driving.c ****  * ========================================
  11:Core/Src/Driving.c **** */
  12:Core/Src/Driving.c **** 
  13:Core/Src/Driving.c **** #include "defs.h"
  14:Core/Src/Driving.c **** #include "param.h"
  15:Core/Src/Driving.c **** 
  16:Core/Src/Driving.c **** // Function to set all servos to motor mode
  17:Core/Src/Driving.c **** void servos_motormode(){
  27              		.loc 1 17 24 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  18:Core/Src/Driving.c ****     SetServoLimit(ID_MOTOR_LB, 0, 0);
  36              		.loc 1 18 5 view .LVU1
  37 0002 0022     		movs	r2, #0
  38 0004 1146     		mov	r1, r2
  39 0006 0620     		movs	r0, #6
  40 0008 FFF7FEFF 		bl	SetServoLimit
ARM GAS  C:\Users\hw\AppData\Local\Temp\ccAWDDea.s 			page 2


  41              	.LVL0:
  19:Core/Src/Driving.c ****     SetServoLimit(ID_MOTOR_LF, 0, 0);
  42              		.loc 1 19 5 view .LVU2
  43 000c 0022     		movs	r2, #0
  44 000e 1146     		mov	r1, r2
  45 0010 0820     		movs	r0, #8
  46 0012 FFF7FEFF 		bl	SetServoLimit
  47              	.LVL1:
  20:Core/Src/Driving.c ****     SetServoLimit(ID_MOTOR_RB, 0, 0);
  48              		.loc 1 20 5 view .LVU3
  49 0016 0022     		movs	r2, #0
  50 0018 1146     		mov	r1, r2
  51 001a 0720     		movs	r0, #7
  52 001c FFF7FEFF 		bl	SetServoLimit
  53              	.LVL2:
  21:Core/Src/Driving.c ****     SetServoLimit(ID_MOTOR_RF, 0, 0);
  54              		.loc 1 21 5 view .LVU4
  55 0020 0022     		movs	r2, #0
  56 0022 1146     		mov	r1, r2
  57 0024 0920     		movs	r0, #9
  58 0026 FFF7FEFF 		bl	SetServoLimit
  59              	.LVL3:
  22:Core/Src/Driving.c **** }
  60              		.loc 1 22 1 is_stmt 0 view .LVU5
  61 002a 08BD     		pop	{r3, pc}
  62              		.cfi_endproc
  63              	.LFE65:
  65              		.global	__aeabi_i2d
  66              		.global	__aeabi_dmul
  67              		.global	__aeabi_d2iz
  68              		.section	.text.go_forward,"ax",%progbits
  69              		.align	1
  70              		.global	go_forward
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu softvfp
  76              	go_forward:
  77              	.LVL4:
  78              	.LFB66:
  23:Core/Src/Driving.c **** 
  24:Core/Src/Driving.c **** // Function to make the robot go forward with a given velocity
  25:Core/Src/Driving.c **** void go_forward(signed short int velocity){
  79              		.loc 1 25 43 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		.loc 1 25 43 is_stmt 0 view .LVU7
  84 0000 10B5     		push	{r4, lr}
  85              	.LCFI1:
  86              		.cfi_def_cfa_offset 8
  87              		.cfi_offset 4, -8
  88              		.cfi_offset 14, -4
  89 0002 0446     		mov	r4, r0
  26:Core/Src/Driving.c ****     SetServoVelocity(ID_MOTOR_LB, V_LB(velocity));
  90              		.loc 1 26 5 is_stmt 1 view .LVU8
  91 0004 0146     		mov	r1, r0
ARM GAS  C:\Users\hw\AppData\Local\Temp\ccAWDDea.s 			page 3


  92 0006 0620     		movs	r0, #6
  93              	.LVL5:
  94              		.loc 1 26 5 is_stmt 0 view .LVU9
  95 0008 FFF7FEFF 		bl	SetServoVelocity
  96              	.LVL6:
  27:Core/Src/Driving.c ****     SetServoVelocity(ID_MOTOR_LF, V_LF(velocity));
  97              		.loc 1 27 5 is_stmt 1 view .LVU10
  98 000c 2146     		mov	r1, r4
  99 000e 0820     		movs	r0, #8
 100 0010 FFF7FEFF 		bl	SetServoVelocity
 101              	.LVL7:
  28:Core/Src/Driving.c ****     SetServoVelocity(ID_MOTOR_RB, V_RB(velocity));
 102              		.loc 1 28 5 view .LVU11
 103              		.loc 1 28 35 is_stmt 0 view .LVU12
 104 0014 6042     		rsbs	r0, r4, #0
 105 0016 FFF7FEFF 		bl	__aeabi_i2d
 106              	.LVL8:
 107 001a 09A3     		adr	r3, .L5
 108 001c D3E90023 		ldrd	r2, [r3]
 109 0020 FFF7FEFF 		bl	__aeabi_dmul
 110              	.LVL9:
 111              		.loc 1 28 5 view .LVU13
 112 0024 FFF7FEFF 		bl	__aeabi_d2iz
 113              	.LVL10:
 114 0028 04B2     		sxth	r4, r0
 115 002a 2146     		mov	r1, r4
 116 002c 0720     		movs	r0, #7
 117 002e FFF7FEFF 		bl	SetServoVelocity
 118              	.LVL11:
  29:Core/Src/Driving.c ****     SetServoVelocity(ID_MOTOR_RF, V_RF(velocity));
 119              		.loc 1 29 5 is_stmt 1 view .LVU14
 120 0032 2146     		mov	r1, r4
 121 0034 0920     		movs	r0, #9
 122 0036 FFF7FEFF 		bl	SetServoVelocity
 123              	.LVL12:
  30:Core/Src/Driving.c **** }
 124              		.loc 1 30 1 is_stmt 0 view .LVU15
 125 003a 10BD     		pop	{r4, pc}
 126              	.L6:
 127 003c AFF30080 		.align	3
 128              	.L5:
 129 0040 713D0AD7 		.word	-687194767
 130 0044 A370F13F 		.word	1072787619
 131              		.cfi_endproc
 132              	.LFE66:
 134              		.section	.text.stop,"ax",%progbits
 135              		.align	1
 136              		.global	stop
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 140              		.fpu softvfp
 142              	stop:
 143              	.LFB67:
  31:Core/Src/Driving.c **** 
  32:Core/Src/Driving.c **** // Function to stop the robot
  33:Core/Src/Driving.c **** void stop(){
ARM GAS  C:\Users\hw\AppData\Local\Temp\ccAWDDea.s 			page 4


 144              		.loc 1 33 12 is_stmt 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148 0000 08B5     		push	{r3, lr}
 149              	.LCFI2:
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 3, -8
 152              		.cfi_offset 14, -4
  34:Core/Src/Driving.c ****     go_forward(0);
 153              		.loc 1 34 5 view .LVU17
 154 0002 0020     		movs	r0, #0
 155 0004 FFF7FEFF 		bl	go_forward
 156              	.LVL13:
  35:Core/Src/Driving.c **** }
 157              		.loc 1 35 1 is_stmt 0 view .LVU18
 158 0008 08BD     		pop	{r3, pc}
 159              		.cfi_endproc
 160              	.LFE67:
 162              		.global	__aeabi_i2f
 163              		.global	__aeabi_fmul
 164              		.global	__aeabi_f2iz
 165              		.section	.text.turn_left_precise,"ax",%progbits
 166              		.align	1
 167              		.global	turn_left_precise
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 171              		.fpu softvfp
 173              	turn_left_precise:
 174              	.LVL14:
 175              	.LFB70:
  36:Core/Src/Driving.c **** 
  37:Core/Src/Driving.c **** // Function to make the robot turn left with a given velocity
  38:Core/Src/Driving.c **** void turn_left(signed short int velocity){
  39:Core/Src/Driving.c ****     turn_left_precise(velocity, -1);
  40:Core/Src/Driving.c **** }
  41:Core/Src/Driving.c **** 
  42:Core/Src/Driving.c **** // Function to make the robot turn right with a given velocity
  43:Core/Src/Driving.c **** void turn_right(signed short int velocity){
  44:Core/Src/Driving.c ****     turn_right_precise(velocity, -1);
  45:Core/Src/Driving.c **** }
  46:Core/Src/Driving.c **** 
  47:Core/Src/Driving.c **** // Function to make the robot turn left with a given velocity and precision
  48:Core/Src/Driving.c **** void turn_left_precise(signed short int velocity, float alpha){
 176              		.loc 1 48 63 is_stmt 1 view -0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 180              		.loc 1 48 63 is_stmt 0 view .LVU20
 181 0000 38B5     		push	{r3, r4, r5, lr}
 182              	.LCFI3:
 183              		.cfi_def_cfa_offset 16
 184              		.cfi_offset 3, -16
 185              		.cfi_offset 4, -12
 186              		.cfi_offset 5, -8
 187              		.cfi_offset 14, -4
ARM GAS  C:\Users\hw\AppData\Local\Temp\ccAWDDea.s 			page 5


 188 0002 0546     		mov	r5, r0
 189 0004 0C46     		mov	r4, r1
  49:Core/Src/Driving.c ****     SetServoVelocity(ID_MOTOR_LB, alpha * V_LB(velocity));
 190              		.loc 1 49 5 is_stmt 1 view .LVU21
 191              		.loc 1 49 41 is_stmt 0 view .LVU22
 192 0006 FFF7FEFF 		bl	__aeabi_i2f
 193              	.LVL15:
 194              		.loc 1 49 41 view .LVU23
 195 000a 2146     		mov	r1, r4
 196 000c FFF7FEFF 		bl	__aeabi_fmul
 197              	.LVL16:
 198              		.loc 1 49 5 view .LVU24
 199 0010 FFF7FEFF 		bl	__aeabi_f2iz
 200              	.LVL17:
 201 0014 04B2     		sxth	r4, r0
 202              	.LVL18:
 203              		.loc 1 49 5 view .LVU25
 204 0016 2146     		mov	r1, r4
 205 0018 0620     		movs	r0, #6
 206 001a FFF7FEFF 		bl	SetServoVelocity
 207              	.LVL19:
  50:Core/Src/Driving.c ****     SetServoVelocity(ID_MOTOR_LF, alpha * V_LF(velocity));
 208              		.loc 1 50 5 is_stmt 1 view .LVU26
 209 001e 2146     		mov	r1, r4
 210 0020 0820     		movs	r0, #8
 211 0022 FFF7FEFF 		bl	SetServoVelocity
 212              	.LVL20:
  51:Core/Src/Driving.c ****     SetServoVelocity(ID_MOTOR_RB, V_RB(velocity));
 213              		.loc 1 51 5 view .LVU27
 214              		.loc 1 51 35 is_stmt 0 view .LVU28
 215 0026 6842     		rsbs	r0, r5, #0
 216 0028 FFF7FEFF 		bl	__aeabi_i2d
 217              	.LVL21:
 218 002c 08A3     		adr	r3, .L11
 219 002e D3E90023 		ldrd	r2, [r3]
 220 0032 FFF7FEFF 		bl	__aeabi_dmul
 221              	.LVL22:
 222              		.loc 1 51 5 view .LVU29
 223 0036 FFF7FEFF 		bl	__aeabi_d2iz
 224              	.LVL23:
 225 003a 04B2     		sxth	r4, r0
 226 003c 2146     		mov	r1, r4
 227 003e 0720     		movs	r0, #7
 228 0040 FFF7FEFF 		bl	SetServoVelocity
 229              	.LVL24:
  52:Core/Src/Driving.c ****     SetServoVelocity(ID_MOTOR_RF, V_RF(velocity));
 230              		.loc 1 52 5 is_stmt 1 view .LVU30
 231 0044 2146     		mov	r1, r4
 232 0046 0920     		movs	r0, #9
 233 0048 FFF7FEFF 		bl	SetServoVelocity
 234              	.LVL25:
  53:Core/Src/Driving.c **** }
 235              		.loc 1 53 1 is_stmt 0 view .LVU31
 236 004c 38BD     		pop	{r3, r4, r5, pc}
 237              	.L12:
 238 004e 00BF     		.align	3
 239              	.L11:
ARM GAS  C:\Users\hw\AppData\Local\Temp\ccAWDDea.s 			page 6


 240 0050 713D0AD7 		.word	-687194767
 241 0054 A370F13F 		.word	1072787619
 242              		.cfi_endproc
 243              	.LFE70:
 245              		.section	.text.turn_left,"ax",%progbits
 246              		.align	1
 247              		.global	turn_left
 248              		.syntax unified
 249              		.thumb
 250              		.thumb_func
 251              		.fpu softvfp
 253              	turn_left:
 254              	.LVL26:
 255              	.LFB68:
  38:Core/Src/Driving.c ****     turn_left_precise(velocity, -1);
 256              		.loc 1 38 42 is_stmt 1 view -0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
  38:Core/Src/Driving.c ****     turn_left_precise(velocity, -1);
 260              		.loc 1 38 42 is_stmt 0 view .LVU33
 261 0000 08B5     		push	{r3, lr}
 262              	.LCFI4:
 263              		.cfi_def_cfa_offset 8
 264              		.cfi_offset 3, -8
 265              		.cfi_offset 14, -4
  39:Core/Src/Driving.c **** }
 266              		.loc 1 39 5 is_stmt 1 view .LVU34
 267 0002 0249     		ldr	r1, .L15
 268 0004 FFF7FEFF 		bl	turn_left_precise
 269              	.LVL27:
  40:Core/Src/Driving.c **** 
 270              		.loc 1 40 1 is_stmt 0 view .LVU35
 271 0008 08BD     		pop	{r3, pc}
 272              	.L16:
 273 000a 00BF     		.align	2
 274              	.L15:
 275 000c 000080BF 		.word	-1082130432
 276              		.cfi_endproc
 277              	.LFE68:
 279              		.global	__aeabi_f2d
 280              		.section	.text.turn_right_precise,"ax",%progbits
 281              		.align	1
 282              		.global	turn_right_precise
 283              		.syntax unified
 284              		.thumb
 285              		.thumb_func
 286              		.fpu softvfp
 288              	turn_right_precise:
 289              	.LVL28:
 290              	.LFB71:
  54:Core/Src/Driving.c **** 
  55:Core/Src/Driving.c **** // Function to make the robot turn right with a given velocity and precision
  56:Core/Src/Driving.c **** void turn_right_precise(signed short int velocity, float alpha){
 291              		.loc 1 56 64 is_stmt 1 view -0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\hw\AppData\Local\Temp\ccAWDDea.s 			page 7


 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              		.loc 1 56 64 is_stmt 0 view .LVU37
 296 0000 70B5     		push	{r4, r5, r6, lr}
 297              	.LCFI5:
 298              		.cfi_def_cfa_offset 16
 299              		.cfi_offset 4, -16
 300              		.cfi_offset 5, -12
 301              		.cfi_offset 6, -8
 302              		.cfi_offset 14, -4
 303 0002 0446     		mov	r4, r0
 304 0004 0E46     		mov	r6, r1
  57:Core/Src/Driving.c ****     SetServoVelocity(ID_MOTOR_LB, V_LB(velocity));
 305              		.loc 1 57 5 is_stmt 1 view .LVU38
 306 0006 0146     		mov	r1, r0
 307              	.LVL29:
 308              		.loc 1 57 5 is_stmt 0 view .LVU39
 309 0008 0620     		movs	r0, #6
 310              	.LVL30:
 311              		.loc 1 57 5 view .LVU40
 312 000a FFF7FEFF 		bl	SetServoVelocity
 313              	.LVL31:
  58:Core/Src/Driving.c ****     SetServoVelocity(ID_MOTOR_LF, V_LF(velocity));
 314              		.loc 1 58 5 is_stmt 1 view .LVU41
 315 000e 2146     		mov	r1, r4
 316 0010 0820     		movs	r0, #8
 317 0012 FFF7FEFF 		bl	SetServoVelocity
 318              	.LVL32:
  59:Core/Src/Driving.c ****     SetServoVelocity(ID_MOTOR_RB, alpha * V_RB(velocity));
 319              		.loc 1 59 5 view .LVU42
 320              		.loc 1 59 43 is_stmt 0 view .LVU43
 321 0016 6042     		rsbs	r0, r4, #0
 322 0018 FFF7FEFF 		bl	__aeabi_i2d
 323              	.LVL33:
 324 001c 0CA3     		adr	r3, .L19
 325 001e D3E90023 		ldrd	r2, [r3]
 326 0022 FFF7FEFF 		bl	__aeabi_dmul
 327              	.LVL34:
 328 0026 0446     		mov	r4, r0
 329 0028 0D46     		mov	r5, r1
 330              		.loc 1 59 41 view .LVU44
 331 002a 3046     		mov	r0, r6
 332 002c FFF7FEFF 		bl	__aeabi_f2d
 333              	.LVL35:
 334 0030 2246     		mov	r2, r4
 335 0032 2B46     		mov	r3, r5
 336 0034 FFF7FEFF 		bl	__aeabi_dmul
 337              	.LVL36:
 338              		.loc 1 59 5 view .LVU45
 339 0038 FFF7FEFF 		bl	__aeabi_d2iz
 340              	.LVL37:
 341 003c 04B2     		sxth	r4, r0
 342 003e 2146     		mov	r1, r4
 343 0040 0720     		movs	r0, #7
 344 0042 FFF7FEFF 		bl	SetServoVelocity
 345              	.LVL38:
  60:Core/Src/Driving.c ****     SetServoVelocity(ID_MOTOR_RF, alpha * V_RF(velocity));
 346              		.loc 1 60 5 is_stmt 1 view .LVU46
ARM GAS  C:\Users\hw\AppData\Local\Temp\ccAWDDea.s 			page 8


 347 0046 2146     		mov	r1, r4
 348 0048 0920     		movs	r0, #9
 349 004a FFF7FEFF 		bl	SetServoVelocity
 350              	.LVL39:
  61:Core/Src/Driving.c **** }
 351              		.loc 1 61 1 is_stmt 0 view .LVU47
 352 004e 70BD     		pop	{r4, r5, r6, pc}
 353              	.LVL40:
 354              	.L20:
 355              		.loc 1 61 1 view .LVU48
 356              		.align	3
 357              	.L19:
 358 0050 713D0AD7 		.word	-687194767
 359 0054 A370F13F 		.word	1072787619
 360              		.cfi_endproc
 361              	.LFE71:
 363              		.section	.text.turn_right,"ax",%progbits
 364              		.align	1
 365              		.global	turn_right
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu softvfp
 371              	turn_right:
 372              	.LVL41:
 373              	.LFB69:
  43:Core/Src/Driving.c ****     turn_right_precise(velocity, -1);
 374              		.loc 1 43 43 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
  43:Core/Src/Driving.c ****     turn_right_precise(velocity, -1);
 378              		.loc 1 43 43 is_stmt 0 view .LVU50
 379 0000 08B5     		push	{r3, lr}
 380              	.LCFI6:
 381              		.cfi_def_cfa_offset 8
 382              		.cfi_offset 3, -8
 383              		.cfi_offset 14, -4
  44:Core/Src/Driving.c **** }
 384              		.loc 1 44 5 is_stmt 1 view .LVU51
 385 0002 0249     		ldr	r1, .L23
 386 0004 FFF7FEFF 		bl	turn_right_precise
 387              	.LVL42:
  45:Core/Src/Driving.c **** 
 388              		.loc 1 45 1 is_stmt 0 view .LVU52
 389 0008 08BD     		pop	{r3, pc}
 390              	.L24:
 391 000a 00BF     		.align	2
 392              	.L23:
 393 000c 000080BF 		.word	-1082130432
 394              		.cfi_endproc
 395              	.LFE69:
 397              		.section	.text.reverse_turn_left,"ax",%progbits
 398              		.align	1
 399              		.global	reverse_turn_left
 400              		.syntax unified
 401              		.thumb
ARM GAS  C:\Users\hw\AppData\Local\Temp\ccAWDDea.s 			page 9


 402              		.thumb_func
 403              		.fpu softvfp
 405              	reverse_turn_left:
 406              	.LVL43:
 407              	.LFB72:
  62:Core/Src/Driving.c **** 
  63:Core/Src/Driving.c **** void reverse_turn_left(signed short int velocity){
 408              		.loc 1 63 50 is_stmt 1 view -0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412              		.loc 1 63 50 is_stmt 0 view .LVU54
 413 0000 08B5     		push	{r3, lr}
 414              	.LCFI7:
 415              		.cfi_def_cfa_offset 8
 416              		.cfi_offset 3, -8
 417              		.cfi_offset 14, -4
  64:Core/Src/Driving.c ****     turn_left_precise(-velocity, 0);
 418              		.loc 1 64 5 is_stmt 1 view .LVU55
 419 0002 4042     		rsbs	r0, r0, #0
 420              	.LVL44:
 421              		.loc 1 64 5 is_stmt 0 view .LVU56
 422 0004 0021     		movs	r1, #0
 423 0006 00B2     		sxth	r0, r0
 424 0008 FFF7FEFF 		bl	turn_left_precise
 425              	.LVL45:
  65:Core/Src/Driving.c **** }
 426              		.loc 1 65 1 view .LVU57
 427 000c 08BD     		pop	{r3, pc}
 428              		.cfi_endproc
 429              	.LFE72:
 431              		.section	.text.reverse_turn_right,"ax",%progbits
 432              		.align	1
 433              		.global	reverse_turn_right
 434              		.syntax unified
 435              		.thumb
 436              		.thumb_func
 437              		.fpu softvfp
 439              	reverse_turn_right:
 440              	.LVL46:
 441              	.LFB73:
  66:Core/Src/Driving.c **** 
  67:Core/Src/Driving.c **** // Function to make the robot turn right with a given velocity
  68:Core/Src/Driving.c **** void reverse_turn_right(signed short int velocity){
 442              		.loc 1 68 51 is_stmt 1 view -0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446              		.loc 1 68 51 is_stmt 0 view .LVU59
 447 0000 08B5     		push	{r3, lr}
 448              	.LCFI8:
 449              		.cfi_def_cfa_offset 8
 450              		.cfi_offset 3, -8
 451              		.cfi_offset 14, -4
  69:Core/Src/Driving.c ****     turn_right_precise(-velocity, 0);
 452              		.loc 1 69 5 is_stmt 1 view .LVU60
 453 0002 4042     		rsbs	r0, r0, #0
ARM GAS  C:\Users\hw\AppData\Local\Temp\ccAWDDea.s 			page 10


 454              	.LVL47:
 455              		.loc 1 69 5 is_stmt 0 view .LVU61
 456 0004 0021     		movs	r1, #0
 457 0006 00B2     		sxth	r0, r0
 458 0008 FFF7FEFF 		bl	turn_right_precise
 459              	.LVL48:
  70:Core/Src/Driving.c **** }
 460              		.loc 1 70 1 view .LVU62
 461 000c 08BD     		pop	{r3, pc}
 462              		.cfi_endproc
 463              	.LFE73:
 465              		.text
 466              	.Letext0:
 467              		.file 2 "Core/Inc/defs.h"
ARM GAS  C:\Users\hw\AppData\Local\Temp\ccAWDDea.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 Driving.c
C:\Users\hw\AppData\Local\Temp\ccAWDDea.s:16     .text.servos_motormode:00000000 $t
C:\Users\hw\AppData\Local\Temp\ccAWDDea.s:24     .text.servos_motormode:00000000 servos_motormode
C:\Users\hw\AppData\Local\Temp\ccAWDDea.s:69     .text.go_forward:00000000 $t
C:\Users\hw\AppData\Local\Temp\ccAWDDea.s:76     .text.go_forward:00000000 go_forward
C:\Users\hw\AppData\Local\Temp\ccAWDDea.s:129    .text.go_forward:00000040 $d
C:\Users\hw\AppData\Local\Temp\ccAWDDea.s:135    .text.stop:00000000 $t
C:\Users\hw\AppData\Local\Temp\ccAWDDea.s:142    .text.stop:00000000 stop
C:\Users\hw\AppData\Local\Temp\ccAWDDea.s:166    .text.turn_left_precise:00000000 $t
C:\Users\hw\AppData\Local\Temp\ccAWDDea.s:173    .text.turn_left_precise:00000000 turn_left_precise
C:\Users\hw\AppData\Local\Temp\ccAWDDea.s:240    .text.turn_left_precise:00000050 $d
C:\Users\hw\AppData\Local\Temp\ccAWDDea.s:246    .text.turn_left:00000000 $t
C:\Users\hw\AppData\Local\Temp\ccAWDDea.s:253    .text.turn_left:00000000 turn_left
C:\Users\hw\AppData\Local\Temp\ccAWDDea.s:275    .text.turn_left:0000000c $d
C:\Users\hw\AppData\Local\Temp\ccAWDDea.s:281    .text.turn_right_precise:00000000 $t
C:\Users\hw\AppData\Local\Temp\ccAWDDea.s:288    .text.turn_right_precise:00000000 turn_right_precise
C:\Users\hw\AppData\Local\Temp\ccAWDDea.s:358    .text.turn_right_precise:00000050 $d
C:\Users\hw\AppData\Local\Temp\ccAWDDea.s:364    .text.turn_right:00000000 $t
C:\Users\hw\AppData\Local\Temp\ccAWDDea.s:371    .text.turn_right:00000000 turn_right
C:\Users\hw\AppData\Local\Temp\ccAWDDea.s:393    .text.turn_right:0000000c $d
C:\Users\hw\AppData\Local\Temp\ccAWDDea.s:398    .text.reverse_turn_left:00000000 $t
C:\Users\hw\AppData\Local\Temp\ccAWDDea.s:405    .text.reverse_turn_left:00000000 reverse_turn_left
C:\Users\hw\AppData\Local\Temp\ccAWDDea.s:432    .text.reverse_turn_right:00000000 $t
C:\Users\hw\AppData\Local\Temp\ccAWDDea.s:439    .text.reverse_turn_right:00000000 reverse_turn_right

UNDEFINED SYMBOLS
SetServoLimit
__aeabi_i2d
__aeabi_dmul
__aeabi_d2iz
SetServoVelocity
__aeabi_i2f
__aeabi_fmul
__aeabi_f2iz
__aeabi_f2d
